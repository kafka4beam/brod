%% -*- erlang -*-
[ {elvis,
   [ {config,
      [ #{dirs => [ "src"
                  ],
          filter => "*.erl",
          rules => [ {elvis_style, line_length,
                      #{ limit => 80,
                         skip_comments => false
                       }}
                   , {elvis_style, no_tabs}
                   , {elvis_style, no_trailing_whitespace}
                     %% Ignoring macro_names since brod_client and brod_producer
                     %% define macro's with arguments in lower_case
                     %% , {elvis_style, macro_names}
                   , {elvis_style, macro_module_names}
                   , {elvis_style, operator_spaces,
                      #{ rules => [ {right,","}
                                  , {right,"+"}
                                  , {left,"+"}
                                  , {right,"*"}
                                  , {left,"*"}
                                  , {right,"--"}
                                  , {left,"--"}
                                  , {right,"++"}
                                  , {left,"++"}
                                  ]
                       }}
                   , {elvis_style, nesting_level,
                      #{ level => 3,
                         ignore => [ brod_group_coordinator
                                   , brod_utils
                                   ]
                       }}
                   , {elvis_style, god_modules,
                      #{ limit => 25,
                         ignore => [brod, brod_utils]
                       }}
                   , {elvis_style, no_nested_try_catch}
                   , {elvis_style, invalid_dynamic_call,
                      #{ignore => [brod_sock, brod_group_coordinator]
                       }}
                   , {elvis_style, used_ignored_variable}
                   , {elvis_style, no_behavior_info}
                   , {elvis_style, module_naming_convention,
                      #{ ignore => [],
                         regex => "^([a-z][a-z0-9]*_?)([a-z0-9]*_?)*$"
                       }}
                   , {elvis_style, function_naming_convention,
                      #{ regex => "^([a-z][a-z0-9]*_?)([a-z0-9]*_?)*$"
                       }}
                   , {elvis_style, variable_naming_convention,
                      #{ regex => "^_?([A-Z][0-9a-zA-Z_]*)$"
                       }}
                   , {elvis_style, state_record_and_type}
                   , {elvis_style, no_spec_with_records}
                   , {elvis_style, dont_repeat_yourself,
                      #{ min_complexity => 15
                       }}
                   , {elvis_style, no_debug_call}
                   ]
         }
      ]
     }
   ]
  }
].

%%%_* Emacs ====================================================================
%%% Local Variables:
%%% allout-layout: t
%%% erlang-indent-level: 2
%%% End:
